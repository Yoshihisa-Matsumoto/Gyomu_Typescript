generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password@127.0.0.1:5432/gyomu"
}

model gyomu_apps_info_cdtbl {
  application_id    Int     @id @db.SmallInt
  description       String? @db.VarChar(50)
  mail_from_address String? @db.VarChar(200)
  mail_from_name    String? @db.VarChar(200)
}

model gyomu_market_holiday {
  market  String @db.VarChar(10)
  year    Int    @db.SmallInt
  holiday String @db.Char(8)

  @@id([market, holiday])
  @@index([market, year], map: "ix_gyomu_market_holiday")
}

model gyomu_milestone_cdtbl {
  milestone_id String @id @db.VarChar(200)
  description  String @db.VarChar(1000)
}

model gyomu_milestone_daily {
  target_date  String  @db.VarChar(8)
  milestone_id String  @db.VarChar(200)
  update_time  BigInt? @default(dbgenerated("floor((date_part('epoch'::text, now()) * (1000)::double precision))"))

  @@id([target_date, milestone_id])
  @@index([milestone_id], map: "ix_gyomu_milestone_daily")
}

model gyomu_param_master {
  item_key      String @db.VarChar(50)
  item_value    String
  item_fromdate String @default("") @db.VarChar(8)

  @@id([item_key, item_fromdate])
}

model gyomu_service_cdtbl {
  id              Int     @id @db.SmallInt
  description     String  @db.VarChar(100)
  service_type_id Int     @db.SmallInt
  parameter       String?
}

model gyomu_service_type_cdtbl {
  id            Int     @id @db.SmallInt
  description   String  @db.VarChar(100)
  assembly_name String? @db.VarChar(100)
  class_name    String? @db.VarChar(100)
}

model gyomu_status_handler {
  id                Int     @id @default(autoincrement())
  application_id    Int     @db.SmallInt
  region            String? @db.VarChar(3)
  status_type       Int?    @db.SmallInt
  recipient_address String? @db.VarChar(200)
  recipient_type    String? @db.VarChar(3)
}

model gyomu_status_info {
  id             BigInt  @id @default(autoincrement())
  application_id Int     @db.SmallInt
  entry_date     BigInt? @default(dbgenerated("floor((date_part('epoch'::text, now()) * (1000)::double precision))"))
  entry_author   String  @db.VarChar(30)
  status_type    Int     @db.SmallInt
  error_id       Int     @db.SmallInt
  instance_id    Int
  hostname       String? @db.VarChar(50)
  summary        String? @db.VarChar(400)
  description    String? @db.VarChar(1000)
  developer_info String?

  @@index([entry_date], map: "cx_gyomu_status_info")
}

model gyomu_status_type_cdtbl {
  status_type Int     @id @db.SmallInt
  description String? @db.VarChar(15)
}

model gyomu_task_data {
  id                  BigInt  @id @default(autoincrement())
  application_id      Int     @db.SmallInt
  task_info_id        Int     @db.SmallInt
  entry_date          BigInt? @default(dbgenerated("floor((date_part('epoch'::text, now()) * (1000)::double precision))"))
  entry_author        String  @db.VarChar(30)
  parent_task_data_id BigInt?
  parameter           String?

  @@index([entry_date], map: "cx_gyomu_task_data")
  @@index([application_id], map: "ix_gyomu_task_data1")
  @@index([task_info_id], map: "ix_gyomu_task_data2")
  @@index([entry_author], map: "ix_gyomu_task_data3")
}

model gyomu_task_data_log {
  id           BigInt  @id @default(autoincrement())
  task_data_id BigInt
  log_time     BigInt? @default(dbgenerated("floor((date_part('epoch'::text, now()) * (1000)::double precision))"))
  log          String

  @@index([task_data_id, log_time], map: "cx_gyomu_task_data_log")
}

model gyomu_task_data_status {
  task_data_id            BigInt  @id
  task_status             String? @db.VarChar(10)
  latest_update_date      BigInt?
  latest_task_instance_id BigInt
}

model gyomu_task_info_access_list {
  id             BigInt  @id @default(autoincrement())
  application_id Int     @db.SmallInt
  task_info_id   Int     @db.SmallInt
  account_name   String  @db.VarChar(100)
  can_access     Boolean
  forbidden      Boolean

  @@index([application_id, task_info_id, account_name], map: "cx_gyomu_task_info_access_list")
}

model gyomu_task_info_cdtbl {
  application_id Int     @db.SmallInt
  task_id        Int     @db.SmallInt
  description    String  @db.VarChar(100)
  language       String  @db.VarChar(10)
  location       String
  class_name     String  @db.VarChar(100)
  restartable    Boolean

  @@id([application_id, task_id])
}

model gyomu_task_instance {
  id             BigInt  @id @default(autoincrement())
  task_data_id   BigInt
  entry_date     BigInt? @default(dbgenerated("floor((date_part('epoch'::text, now()) * (1000)::double precision))"))
  entry_author   String  @db.VarChar(30)
  task_status    String? @db.VarChar(10)
  is_done        Boolean
  status_info_id BigInt?
  parameter      String?
  comment        String?

  @@index([entry_date], map: "cx_gyomu_task_instance")
  @@index([task_data_id], map: "ix_gyomu_task_instance1")
  @@index([task_status], map: "ix_gyomu_task_instance2")
}

model gyomu_task_instance_submit_information {
  id               BigInt  @id @default(autoincrement())
  task_instance_id BigInt
  submit_to        String? @db.VarChar(30)

  @@index([task_instance_id, submit_to], map: "cx_gyomu_task_instance_submit_information")
}

model gyomu_task_scheduler_config {
  id                BigInt  @id @default(autoincrement())
  service_id        Int     @db.SmallInt
  description       String  @db.VarChar(200)
  application_id    Int     @db.SmallInt
  task_id           Int     @db.SmallInt
  monitor_parameter String
  next_trigger_time BigInt
  task_parameter    String?
  is_enabled        Boolean

  @@index([description], map: "ix_gyomu_task_scheduler_config")
  @@index([service_id], map: "ix_gyomu_task_scheduler_config2")
  @@index([application_id, task_id], map: "ix_gyomu_task_scheduler_config3")
  @@index([is_enabled], map: "ix_gyomu_task_scheduler_config4")
}

model gyomu_variable_parameter {
  variable_key String @id @db.VarChar(20)
  description  String @db.VarChar(200)
}
